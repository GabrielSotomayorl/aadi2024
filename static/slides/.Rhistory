# Graficar la relación entre escolaridad y brecha salarial con medias condicionales
ggplot(datos, aes(x = promedio_anios_escolaridad25_2017, y = brecha)) +
geom_point(color = "#0073C2", size = 3, alpha = 0.7) +  # Puntos más grandes y ligeramente transparentes
geom_smooth(method = "lm", color = "black", linetype = "solid", se = FALSE) +  # Línea de tendencia en negro
geom_vline(xintercept = mean(datos$promedio_anios_escolaridad25_2017, na.rm = TRUE), color = "red", linetype = "dotted", size = 1) +  # Línea roja punteada en la media de 'promedio_anios_escolaridad25_2017'
geom_hline(yintercept = mean(datos$brecha, na.rm = TRUE), color = "red", linetype = "dotted", size = 1) +  # Línea roja punteada en la media de 'brecha'
geom_point(data = medias_condicionales, aes(x = media_escolaridad, y = media_brecha),
color = "darkorange", size = 4, shape = 17) +  # Medias condicionales en color naranja y con forma de triángulo
geom_line(data = medias_condicionales, aes(x = media_escolaridad, y = media_brecha),
color = "darkorange", linetype = "dashed", size = 1) +  # Línea que une las medias condicionales
labs(
x = "Promedio de Años de Escolaridad (2017)",
y = "Brecha Salarial de Género (%)",
title = "Relación entre Promedio de Años de Escolaridad y Brecha Salarial de Género"
) +
theme_minimal(base_size = 16) +  # Tamaño base de letra aumentado
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 18),  # Título centrado, en negrita y más grande
axis.title = element_text(face = "bold", size = 14),               # Títulos de los ejes en negrita y más grandes
axis.text = element_text(color = "#333333", size = 12),            # Texto de los ejes más grande
panel.grid.major = element_line(color = "#e0e0e0"),                # Líneas de la cuadrícula mayor en gris claro
panel.grid.minor = element_blank()                                 # Elimina las líneas de la cuadrícula menor
)
medias_condicionales
```{r echo=F}
```{r echo=F}
datos <- readRDS("data/datos.rds") %>%
filter(brecha<40 & brecha > -20 & !is.na(brecha))
mean_brecha <- mean(datos$brecha, na.rm = TRUE)
# Modelo de regresión
model <- lm(brecha ~ promedio_anios_escolaridad25_2017, data = datos)
datos$predicted <- predict(model)
ggplot(datos, aes(x = promedio_anios_escolaridad25_2017, y = brecha)) +
geom_point(color = "#0073C2", size = 3, alpha = 0.7) +  # Puntos más grandes y ligeramente transparentes
geom_smooth(method = "lm", color = "black", linetype = "solid", se = FALSE) +  # Línea de tendencia en negro
geom_segment(aes(xend = promedio_anios_escolaridad25_2017, yend = predicted),
color = "purple", linetype = "dashed") +  # Líneas punteadas moradas que representan los residuos
geom_vline(xintercept = mean(datos$promedio_anios_escolaridad25_2017, na.rm = TRUE),
color = "red", linetype = "dotted", size = 1) +  # Línea roja punteada en la media de 'promedio_anios_escolaridad25_2017'
geom_hline(yintercept = mean(datos$brecha, na.rm = TRUE),
color = "red", linetype = "dotted", size = 1) +  # Línea roja punteada en la media de 'brecha'
labs(
x = "Promedio de Años de Escolaridad (2017)",
y = "Brecha Salarial de Género (%)",
title = "Relación entre Promedio de Años de Escolaridad y Brecha Salarial de Género con Residuos"
) +
theme_minimal(base_size = 16) +  # Tamaño base de letra aumentado
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 18),  # Título centrado, en negrita y más grande
axis.title = element_text(face = "bold", size = 14),               # Títulos de los ejes en negrita y más grandes
axis.text = element_text(color = "#333333", size = 12),            # Texto de los ejes más grande
panel.grid.major = element_line(color = "#e0e0e0"),                # Líneas de la cuadrícula mayor en gris claro
panel.grid.minor = element_blank()                                 # Elimina las líneas de la cuadrícula menor
)
```{r echo=F}
library(dplyr)
library(ggplot2)
# Cargar los datos y filtrar
datos <- readRDS("data/datos.rds") %>%
filter(brecha < 40 & brecha > -20 & !is.na(brecha))
# Calcular la media de brecha
mean_brecha <- mean(datos$brecha, na.rm = TRUE)
# Modelo de regresión
model <- lm(brecha ~ promedio_anios_escolaridad25_2017, data = datos)
datos$predicted <- predict(model)
# Seleccionar una muestra de los datos
set.seed(123) # Fijar semilla para reproducibilidad
sampled_data <- datos %>% sample_n(20)  # Seleccionar 20 puntos aleatorios
ggplot(datos, aes(x = promedio_anios_escolaridad25_2017, y = brecha)) +
geom_point(color = "#0073C2", size = 3, alpha = 0.7) +  # Puntos de datos
geom_smooth(method = "lm", color = "black", linetype = "solid", se = FALSE) +  # Línea de tendencia
geom_segment(data = sampled_data, aes(xend = promedio_anios_escolaridad25_2017, yend = predicted),
color = "purple", linetype = "dashed") +  # Líneas punteadas moradas para la muestra
geom_vline(xintercept = mean(datos$promedio_anios_escolaridad25_2017, na.rm = TRUE),
color = "red", linetype = "dotted", size = 1) +  # Línea roja punteada en la media de 'promedio_anios_escolaridad25_2017'
geom_hline(yintercept = mean(datos$brecha, na.rm = TRUE),
color = "red", linetype = "dotted", size = 1) +  # Línea roja punteada en la media de 'brecha'
labs(
x = "Promedio de Años de Escolaridad (2017)",
y = "Brecha Salarial de Género (%)",
title = "Relación entre Promedio de Años de Escolaridad y Brecha Salarial de Género con Residuos"
) +
theme_minimal(base_size = 16) +  # Tamaño base de letra aumentado
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 18),  # Título centrado, en negrita y más grande
axis.title = element_text(face = "bold", size = 14),               # Títulos de los ejes en negrita y más grandes
axis.text = element_text(color = "#333333", size = 12),            # Texto de los ejes más grande
panel.grid.major = element_line(color = "#e0e0e0"),                # Líneas de la cuadrícula mayor en gris claro
panel.grid.minor = element_blank()                                 # Elimina las líneas de la cuadrícula menor
)
# Calcular la media de brecha
mean_brecha <- mean(datos$brecha, na.rm = TRUE)
# Modelo de regresión
model <- lm(brecha ~ promedio_anios_escolaridad25_2017, data = datos)
datos$predicted <- predict(model)
# Seleccionar una muestra de los datos
set.seed(123) # Fijar semilla para reproducibilidad
sampled_data <- datos %>% sample_n(50)  # Seleccionar 50 puntos aleatorios
ggplot(sampled_data, aes(x = promedio_anios_escolaridad25_2017, y = brecha)) +
geom_point(color = "#0073C2", size = 3, alpha = 0.7) +  # Puntos de datos seleccionados
geom_smooth(data = datos, aes(x = promedio_anios_escolaridad25_2017, y = brecha),
method = "lm", color = "black", linetype = "solid", se = FALSE) +  # Línea de tendencia para todos los datos
geom_segment(aes(xend = promedio_anios_escolaridad25_2017, yend = predicted),
color = "purple", linetype = "dashed") +  # Líneas punteadas moradas para la muestra
geom_vline(xintercept = mean(datos$promedio_anios_escolaridad25_2017, na.rm = TRUE),
color = "red", linetype = "dotted", size = 1) +  # Línea roja punteada en la media de 'promedio_anios_escolaridad25_2017'
geom_hline(yintercept = mean(datos$brecha, na.rm = TRUE),
color = "red", linetype = "dotted", size = 1) +  # Línea roja punteada en la media de 'brecha'
labs(
x = "Promedio de Años de Escolaridad (2017)",
y = "Brecha Salarial de Género (%)",
title = "Relación entre Promedio de Años de Escolaridad y Brecha Salarial de Género con Residuos"
) +
theme_minimal(base_size = 16) +  # Tamaño base de letra aumentado
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 18),  # Título centrado, en negrita y más grande
axis.title = element_text(face = "bold", size = 14),               # Títulos de los ejes en negrita y más grandes
axis.text = element_text(color = "#333333", size = 12),            # Texto de los ejes más grande
panel.grid.major = element_line(color = "#e0e0e0"),                # Líneas de la cuadrícula mayor en gris claro
panel.grid.minor = element_blank()                                 # Elimina las líneas de la cuadrícula menor
)
# Crear categorías de escolaridad para calcular medias condicionales
datos <- datos %>%
mutate(escolaridad_cat = cut(promedio_anios_escolaridad25_2017,
breaks = seq(floor(min(promedio_anios_escolaridad25_2017, na.rm = TRUE)),
ceiling(max(promedio_anios_escolaridad25_2017, na.rm = TRUE)),
by = 2),
include.lowest = TRUE))
# Calcular medias condicionales
medias_condicionales <- datos %>%
group_by(escolaridad_cat) %>%
summarize(
media_brecha = mean(brecha, na.rm = TRUE),
media_escolaridad = mean(promedio_anios_escolaridad25_2017, na.rm = TRUE)
)
# Graficar la relación entre escolaridad y brecha salarial con medias condicionales
ggplot(datos, aes(x = promedio_anios_escolaridad25_2017, y = brecha)) +
geom_point(color = "#0073C2", size = 3, alpha = 0.7) +  # Puntos más grandes y ligeramente transparentes
geom_smooth(method = "lm", color = "black", linetype = "solid", se = FALSE) +  # Línea de tendencia en negro
geom_vline(xintercept = mean(datos$promedio_anios_escolaridad25_2017, na.rm = TRUE), color = "red", linetype = "dotted", size = 1) +  # Línea roja punteada en la media de 'promedio_anios_escolaridad25_2017'
geom_hline(yintercept = mean(datos$brecha, na.rm = TRUE), color = "red", linetype = "dotted", size = 1) +  # Línea roja punteada en la media de 'brecha'
geom_point(data = medias_condicionales, aes(x = media_escolaridad, y = media_brecha),
color = "darkorange", size = 4, shape = 17) +  # Medias condicionales en color naranja y con forma de triángulo
geom_line(data = medias_condicionales, aes(x = media_escolaridad, y = media_brecha),
color = "darkorange", linetype = "dashed", size = 1) +  # Línea que une las medias condicionales
labs(
x = "Promedio de Años de Escolaridad (2017)",
y = "Brecha Salarial de Género (%)",
title = "Relación entre Promedio de Años de Escolaridad y Brecha Salarial de Género"
) +
theme_minimal(base_size = 16) +  # Tamaño base de letra aumentado
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 18),  # Título centrado, en negrita y más grande
axis.title = element_text(face = "bold", size = 14),               # Títulos de los ejes en negrita y más grandes
axis.text = element_text(color = "#333333", size = 12),            # Texto de los ejes más grande
panel.grid.major = element_line(color = "#e0e0e0"),                # Líneas de la cuadrícula mayor en gris claro
panel.grid.minor = element_blank()                                 # Elimina las líneas de la cuadrícula menor
)
ibrary(dplyr)
# Calcular la media de brecha
mean_brecha <- mean(datos$brecha, na.rm = TRUE)
# Modelo de regresión
model <- lm(brecha ~ promedio_anios_escolaridad25_2017, data = datos)
datos$predicted <- predict(model)
# Seleccionar una muestra de los datos
set.seed(123) # Fijar semilla para reproducibilidad
sampled_data <- datos %>% sample_n(5)  # Seleccionar 5 puntos aleatorios
# Crear el gráfico
ggplot(sampled_data, aes(x = promedio_anios_escolaridad25_2017, y = brecha)) +
geom_point(color = "black", size = 3) +  # Puntos observados
geom_point(aes(y = predicted), color = "white", size = 3) +  # Puntos predichos
geom_segment(aes(xend = promedio_anios_escolaridad25_2017, yend = predicted),
color = "black", linetype = "dashed") +  # Líneas de residuos
geom_smooth(data = datos, aes(x = promedio_anios_escolaridad25_2017, y = brecha),
method = "lm", color = "black", linetype = "solid", se = FALSE) +  # Línea de regresión
labs(
x = "Promedio de Años de Escolaridad (2017)",
y = "Brecha Salarial de Género (%)",
title = "Ejemplo de Residuos en la Brecha Salarial de Género"
) +
theme_minimal(base_size = 16) +  # Tamaño base de letra aumentado
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 18),  # Título centrado, en negrita y más grande
axis.title = element_text(face = "bold", size = 14),               # Títulos de los ejes en negrita y más grandes
axis.text = element_text(color = "#333333", size = 12),            # Texto de los ejes más grande
panel.grid.major = element_line(color = "#e0e0e0"),                # Líneas de la cuadrícula mayor en gris claro
panel.grid.minor = element_blank()                                 # Elimina las líneas de la cuadrícula menor
)
# Crear datos ficticios
set.seed(42)
x <- seq(10, 15, length.out = 5)
y <- 2*x + rnorm(5, 0, 0.5)
pred <- 2*x  # Valores predichos
data <- data.frame(x = x, y = y, pred = pred)
ggplot(data, aes(x = x, y = y)) +
geom_point(color = "black", size = 3) +  # Puntos observados
geom_point(aes(y = pred), color = "white", size = 3) +  # Puntos predichos
geom_segment(aes(xend = x, yend = pred),
color = "black", linetype = "dashed") +  # Líneas de residuos
geom_line(aes(y = pred), color = "black") +  # Línea de regresión
annotate("text", x = data$x[2] + 0.1, y = data$y[2] + 0.5, label = "y observada",
hjust = 0, color = "black", size = 4) +
annotate("text", x = data$x[2] + 0.1, y = data$pred[2] - 0.5, label = "y predicha",
hjust = 0, color = "black", size = 4) +
annotate("text", x = data$x[2] + 0.5, y = (data$y[2] + data$pred[2]) / 2,
label = "distancia y - ŷ", hjust = 0, color = "black", size = 4) +
labs(
x = "Variable Predictora",
y = "Variable Predicha",
title = "Relación entre Variable Predictora y Variable Predicha"
) +
theme_minimal(base_size = 14) +  # Tamaño base de letra aumentado
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 16),  # Título centrado y en negrita
axis.title = element_text(face = "bold", size = 12)                # Títulos de los ejes en negrita
)
x <- c(10, 12, 14)
y_observed <- c(15.5, 14, 16)
y_predicted <- c(13, 14.5, 16.5)  # Valores predichos en la línea de regresión
data <- data.frame(x = x, y_observed = y_observed, y_predicted = y_predicted)
ggplot(data, aes(x = x, y = y_observed)) +
geom_point(color = "black", size = 3) +  # Puntos observados
geom_point(aes(y = y_predicted), color = "white", size = 3) +  # Puntos predichos
geom_segment(aes(xend = x, yend = y_predicted),
color = "black", linetype = "dashed") +  # Líneas de residuos
geom_line(aes(y = y_predicted), color = "black") +  # Línea de regresión
annotate("text", x = x[1] - 0.3, y = y_observed[1], label = "y observada",
hjust = 1, color = "black", size = 4) +
annotate("text", x = x[1] - 0.3, y = y_predicted[1], label = "ŷ predicha",
hjust = 1, color = "black", size = 4) +
annotate("text", x = x[2] + 0.3, y = (y_observed[2] + y_predicted[2]) / 2,
label = "distancia y - ŷ", hjust = 0, color = "black", size = 4) +
labs(
x = "Variable Predictora",
y = "Variable Predicha",
title = "Relación entre Variable Predictora y Variable Predicha"
) +
theme_minimal(base_size = 14) +  # Tamaño base de letra aumentado
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 16),  # Título centrado y en negrita
axis.title = element_text(face = "bold", size = 12)                # Títulos de los ejes en negrita
)
lm(datos$brecha ~ datos$promedio_anios_escolaridad25_2017)
mean_brecha <- mean(datos$brecha, na.rm = TRUE)
ggplot(datos, aes(x = promedio_anios_escolaridad25_2017, y = brecha)) +
geom_point(color = "#0073C2", size = 3, alpha = 0.7) +  # Puntos más grandes y ligeramente transparentes
geom_smooth(method = "lm", color = "black", linetype = "solid", se = FALSE, fullrange = TRUE) +  # Línea de tendencia en negro que se extiende al rango completo
geom_vline(xintercept = mean(datos$promedio_anios_escolaridad25_2017, na.rm = TRUE), color = "red", linetype = "dotted", size = 1) +  # Línea roja punteada en la media de 'promedio_anios_escolaridad25_2017'
geom_hline(yintercept = mean(datos$brecha, na.rm = TRUE), color = "red", linetype = "dotted", size = 1) +  # Línea roja punteada en la media de 'brecha'
labs(
x = "Promedio de Años de Escolaridad (2017)",
y = "Brecha Salarial de Género (%)",
title = "Relación entre Promedio de Años de Escolaridad y Brecha Salarial de Género"
) +
xlim(-1, NA) +  # Extiende el eje x hasta -1
theme_minimal(base_size = 16) +  # Tamaño base de letra aumentado
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 18),  # Título centrado, en negrita y más grande
axis.title = element_text(face = "bold", size = 14),               # Títulos de los ejes en negrita y más grandes
axis.text = element_text(color = "#333333", size = 12),            # Texto de los ejes más grande
panel.grid.major = element_line(color = "#e0e0e0"),                # Líneas de la cuadrícula mayor en gris claro
panel.grid.minor = element_blank()                                 # Elimina las líneas de la cuadrícula menor
)
datos <- readRDS("data/datos.rds") %>%
filter(brecha<40 & brecha > -20 & !is.na(brecha))
library(ggplot2)
library(ggplot2)
library(dplyr)
# Crear categorías de escolaridad para calcular medias condicionales
datos <- readRDS("data/datos.rds") %>%
filter(brecha<40 & brecha > -20 & !is.na(brecha))
datos <- datos %>%
mutate(escolaridad_cat = cut(promedio_anios_escolaridad25_2017,
breaks = seq(floor(min(promedio_anios_escolaridad25_2017, na.rm = TRUE)),
ceiling(max(promedio_anios_escolaridad25_2017, na.rm = TRUE)),
by = 1),
include.lowest = TRUE))
mean_brecha <- mean(datos$brecha, na.rm = TRUE)
View(datos)
datos %>%
select(comuna, brecha, promedio_anios_escolaridad25_2017) %>%
View()
mean(datos$brecha)
# Crear categorías de escolaridad para calcular medias condicionales
datos <- readRDS("data/datos.rds") %>%
filter(brecha < 40 & brecha > -20 & !is.na(brecha))
datos <- datos %>%
mutate(escolaridad_cat = cut(promedio_anios_escolaridad25_2017,
breaks = seq(floor(min(promedio_anios_escolaridad25_2017, na.rm = TRUE)),
ceiling(max(promedio_anios_escolaridad25_2017, na.rm = TRUE)),
by = 1),
include.lowest = TRUE))
# Calcular la media de brecha salarial
mean_brecha <- mean(datos$brecha, na.rm = TRUE)
# Extraer el punto específico cuya brecha es igual a 31.13078
punto_sierra_gorda <- datos %>% filter(abs(brecha - 31.13078) < 0.001)
# Calcular el valor predicho para la escolaridad de ese punto
prediccion_sierra_gorda <- -16.451 + 2.852 * punto_sierra_gorda$promedio_anios_escolaridad25_2017
# Crear el gráfico con las líneas adicionales
ggplot(datos, aes(x = promedio_anios_escolaridad25_2017, y = brecha)) +
geom_point(color = "#0073C2", size = 3, alpha = 0.7) +  # Puntos más grandes y ligeramente transparentes
geom_smooth(method = "lm", color = "black", linetype = "solid", se = FALSE) +  # Línea de tendencia en negro
geom_vline(xintercept = mean(datos$promedio_anios_escolaridad25_2017, na.rm = TRUE), color = "red", linetype = "dotted", size = 1) +  # Línea roja punteada en la media de 'promedio_anios_escolaridad25_2017'
geom_hline(yintercept = mean_brecha, color = "red", linetype = "dotted", size = 1) +  # Línea roja punteada en la media de 'brecha'
# Agregar líneas para el punto específico de Sierra Gorda
geom_segment(aes(x = punto_sierra_gorda$promedio_anios_escolaridad25_2017,
xend = punto_sierra_gorda$promedio_anios_escolaridad25_2017,
y = mean_brecha,
yend = prediccion_sierra_gorda),
color = "orange", linetype = "dashed", size = 1.2) +  # Línea del componente explicado
geom_segment(aes(x = punto_sierra_gorda$promedio_anios_escolaridad25_2017,
xend = punto_sierra_gorda$promedio_anios_escolaridad25_2017,
y = prediccion_sierra_gorda,
yend = punto_sierra_gorda$brecha),
color = "purple", linetype = "dashed", size = 1.2) +  # Línea del residuo
geom_point(data = punto_sierra_gorda, aes(x = promedio_anios_escolaridad25_2017, y = brecha),
color = "darkred", size = 4) +  # Resaltar el punto específico
labs(
x = "Promedio de Años de Escolaridad (2017)",
y = "Brecha Salarial de Género (%)",
title = "Relación entre Promedio de Años de Escolaridad y Brecha Salarial de Género"
) +
theme_minimal(base_size = 16) +  # Tamaño base de letra aumentado
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 18),  # Título centrado, en negrita y más grande
axis.title = element_text(face = "bold", size = 14),               # Títulos de los ejes en negrita y más grandes
axis.text = element_text(color = "#333333", size = 12),            # Texto de los ejes más grande
panel.grid.major = element_line(color = "#e0e0e0"),                # Líneas de la cuadrícula mayor en gris claro
panel.grid.minor = element_blank()                                 # Elimina las líneas de la cuadrícula menor
)
datos <- readRDS("data/datos.rds") %>%
filter(brecha < 40 & brecha > -20 & !is.na(brecha))
library(ggplot2)
library(dplyr)
# Crear categorías de escolaridad para calcular medias condicionales
datos <- readRDS("data/datos.rds") %>%
filter(brecha<40 & brecha > -20 & !is.na(brecha))
datos <- datos %>%
mutate(escolaridad_cat = cut(promedio_anios_escolaridad25_2017,
breaks = seq(floor(min(promedio_anios_escolaridad25_2017, na.rm = TRUE)),
ceiling(max(promedio_anios_escolaridad25_2017, na.rm = TRUE)),
by = 1),
include.lowest = TRUE))
mean_brecha <- mean(datos$brecha, na.rm = TRUE)
ggplot(datos, aes(x = promedio_anios_escolaridad25_2017, y = brecha)) +
geom_point(color = "#0073C2", size = 3, alpha = 0.7) +  # Puntos más grandes y ligeramente transparentes
geom_smooth(method = "lm", color = "black", linetype = "solid", se = FALSE) +  # Línea de tendencia en negro
geom_vline(xintercept = mean(datos$promedio_anios_escolaridad25_2017, na.rm = TRUE), color = "red", linetype = "dotted", size = 1) +  # Línea roja punteada en la media de 'promedio_anios_escolaridad25_2017'
geom_hline(yintercept = mean(datos$brecha, na.rm = TRUE), color = "red", linetype = "dotted", size = 1) +  # Línea roja punteada en la media de 'brecha'
labs(
x = "Promedio de Años de Escolaridad (2017)",
y = "Brecha Salarial de Género (%)",
title = "Relación entre Promedio de Años de Escolaridad y Brecha Salarial de Género"
) +
theme_minimal(base_size = 16) +  # Tamaño base de letra aumentado
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 18),  # Título centrado, en negrita y más grande
axis.title = element_text(face = "bold", size = 14),               # Títulos de los ejes en negrita y más grandes
axis.text = element_text(color = "#333333", size = 12),            # Texto de los ejes más grande
panel.grid.major = element_line(color = "#e0e0e0"),                # Líneas de la cuadrícula mayor en gris claro
panel.grid.minor = element_blank()                                 # Elimina las líneas de la cuadrícula menor
)
# Calcular la media de brecha salarial
mean_brecha <- mean(datos$brecha, na.rm = TRUE)
# Extraer el punto específico cuya brecha es igual a 31.13078
punto_sierra_gorda <- datos %>% filter(abs(brecha - 31.13078) < 0.001)
# Calcular el valor predicho para la escolaridad de ese punto
prediccion_sierra_gorda <- -16.451 + 2.852 * punto_sierra_gorda$promedio_anios_escolaridad25_2017
# Crear el gráfico con las líneas adicionales
ggplot(datos, aes(x = promedio_anios_escolaridad25_2017, y = brecha)) +
geom_point(color = "#0073C2", size = 3, alpha = 0.7) +  # Puntos más grandes y ligeramente transparentes
geom_smooth(method = "lm", color = "black", linetype = "solid", se = FALSE) +  # Línea de tendencia en negro
geom_vline(xintercept = mean(datos$promedio_anios_escolaridad25_2017, na.rm = TRUE), color = "red", linetype = "dotted", size = 1) +  # Línea roja punteada en la media de 'promedio_anios_escolaridad25_2017'
geom_hline(yintercept = mean_brecha, color = "red", linetype = "dotted", size = 1) +  # Línea roja punteada en la media de 'brecha'
# Agregar líneas para el punto específico de Sierra Gorda
geom_segment(aes(x = punto_sierra_gorda$promedio_anios_escolaridad25_2017,
xend = punto_sierra_gorda$promedio_anios_escolaridad25_2017,
y = mean_brecha,
yend = prediccion_sierra_gorda),
color = "orange", linetype = "dashed", size = 1.2) +  # Línea del componente explicado
geom_segment(aes(x = punto_sierra_gorda$promedio_anios_escolaridad25_2017,
xend = punto_sierra_gorda$promedio_anios_escolaridad25_2017,
y = prediccion_sierra_gorda,
yend = punto_sierra_gorda$brecha),
color = "purple", linetype = "dashed", size = 1.2) +  # Línea del residuo
geom_point(data = punto_sierra_gorda, aes(x = promedio_anios_escolaridad25_2017, y = brecha),
color = "darkred", size = 4) +  # Resaltar el punto específico
labs(
x = "Promedio de Años de Escolaridad (2017)",
y = "Brecha Salarial de Género (%)",
title = "Relación entre Promedio de Años de Escolaridad y Brecha Salarial de Género"
) +
theme_minimal(base_size = 16) +  # Tamaño base de letra aumentado
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 18),  # Título centrado, en negrita y más grande
axis.title = element_text(face = "bold", size = 14),               # Títulos de los ejes en negrita y más grandes
axis.text = element_text(color = "#333333", size = 12),            # Texto de los ejes más grande
panel.grid.major = element_line(color = "#e0e0e0"),                # Líneas de la cuadrícula mayor en gris claro
panel.grid.minor = element_blank()                                 # Elimina las líneas de la cuadrícula menor
)
# Calcular los valores predichos para todos los puntos
datos <- datos %>%
mutate(prediccion = -16.451 + 2.852 * promedio_anios_escolaridad25_2017)
# Crear el gráfico con las líneas adicionales para todos los puntos
ggplot(datos, aes(x = promedio_anios_escolaridad25_2017, y = brecha)) +
geom_point(color = "#0073C2", size = 3, alpha = 0.7) +  # Puntos más grandes y ligeramente transparentes
geom_smooth(method = "lm", color = "black", linetype = "solid", se = FALSE) +  # Línea de tendencia en negro
geom_vline(xintercept = mean(datos$promedio_anios_escolaridad25_2017, na.rm = TRUE), color = "red", linetype = "dotted", size = 1) +  # Línea roja punteada en la media de 'promedio_anios_escolaridad25_2017'
geom_hline(yintercept = mean_brecha, color = "red", linetype = "dotted", size = 1) +  # Línea roja punteada en la media de 'brecha'
# Agregar líneas para todos los puntos
geom_segment(aes(x = promedio_anios_escolaridad25_2017,
xend = promedio_anios_escolaridad25_2017,
y = mean_brecha,
yend = prediccion),
color = "orange", linetype = "dashed", size = 1.2) +  # Línea del componente explicado
geom_segment(aes(x = promedio_anios_escolaridad25_2017,
xend = promedio_anios_escolaridad25_2017,
y = prediccion,
yend = brecha),
color = "purple", linetype = "dashed", size = 1.2) +  # Línea del residuo
labs(
x = "Promedio de Años de Escolaridad (2017)",
y = "Brecha Salarial de Género (%)",
title = "Relación entre Promedio de Años de Escolaridad y Brecha Salarial de Género"
) +
theme_minimal(base_size = 16) +  # Tamaño base de letra aumentado
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 18),  # Título centrado, en negrita y más grande
axis.title = element_text(face = "bold", size = 14),               # Títulos de los ejes en negrita y más grandes
axis.text = element_text(color = "#333333", size = 12),            # Texto de los ejes más grande
panel.grid.major = element_line(color = "#e0e0e0"),                # Líneas de la cuadrícula mayor en gris claro
panel.grid.minor = element_blank()                                 # Elimina las líneas de la cuadrícula menor
)
mean(datos$promedio_anios_escolaridad25_2017)
mean(datos$brecha)
load("C:/Users/Gabriel/Downloads/ELSOC_W05_v1.0_R.RData")
View(elsoc_2021)
elsoc_2021$c14_02
elsoc_2021$c13
table(elsoc_2021$c13)
find_var(elsoc_2021, "num")
library(sjmisc)
find_var(elsoc_2021, "num")
find_var(elsoc_2021, "cant")
table(elsoc_2021$c03)
table(elsoc_2021$c02)
frq(elsoc_2021$c02)
frq(elsoc_2021$c18_04)
lm(t16 ~ c18_04, data = elsoc_2021)
frq(elsoc_2021$f05_03)
frq(elsoc_2021$m42_02)
frq(elsoc_2021$c15)
frq(elsoc_2021$g01_04)
lm(g01_04 ~ c15, data = elsoc_2021 %>%
filter(g01_04 > 0 & c15 %in% 0:10))
elsoc_2021 %>%
filter(g01_04 > 0 & c15 %in% 0:10)
library(dplyr)
lm(g01_04 ~ c15, data = elsoc_2021 %>%
filter(g01_04 > 0 & c15 %in% 0:10))
library(texreg)
a<-lm(g01_04 ~ c15, data = elsoc_2021 %>%
filter(g01_04 > 0 & c15 %in% 0:10))
screenreg(a)
frq(elsoc_2021$g37_04)
frq(elsoc_2021$c37_04)
a<-lm(c37_04 ~ c15, data = elsoc_2021 %>%
filter(c37_04 > 0 & c15 %in% 0:10))
screenreg(a)
a<-lm(c37_02 ~ c15, data = elsoc_2021 %>%
filter(c37_02 > 0 & c15 %in% 0:10))
screenreg(a)
frq(elsoc_2021$c37_05)
a<-lm(c37_05 ~ c15, data = elsoc_2021 %>%
filter(c37_05 > 0 & c15 %in% 0:10))
screenreg(a)
a<-lm(c37_01 ~ c15, data = elsoc_2021 %>%
filter(c37_01 > 0 & c15 %in% 0:10))
screenreg(a)
frq(elsoc_2021$c18_11)
a<-lm(c18_11 ~ c15, data = elsoc_2021 %>%
filter(c18_11 > 0 & c15 %in% 0:10))
screenreg(a)
frq(elsoc_2021$m0_edad)
frq(elsoc_2021$m16)
a<-lm(c15 ~ m0_edad, data = elsoc_2021 %>%
filter( c15 %in% 0:10))
screenreg(a)
a<-lm(m16 ~ m0_edad, data = elsoc_2021 %>%
filter( c15 %in% 0:10))
screenreg(a)
frq(elsoc_2021$m16)
filter(m16>0)
a<-lm(m16 ~ m0_edad, data = elsoc_2021 %>%
filter(m16>0))
screenreg(a)
a<-lm(m16 ~ c15, data = elsoc_2021 %>%
filter(m16>0 & c15 %in% 0:10))
screenreg(a)
temp <- tempfile() #Creamos un archivo temporal
download.file("https://observatorio.ministeriodesarrollosocial.gob.cl/storage/docs/casen/2022/Base%20de%20datos%20Casen%202022%20SPSS.sav.zip",temp) #descargamos los datos
casen <- haven::read_sav(unz(temp, "Base de datos Casen 2022 SPSS.sav")) #cargamos los datos
unlink(temp); remove(temp) #eliminamos el archivo temporal
lm(casen$ytrabajocor~casen$esc)
screenreg(lm(casen$ytrabajocor~casen$esc))
htmlreg(lm(casen$ytrabajocor~casen$esc),
custom.coef.names = c("Intercepto", "Años de escolaridad"),
file = "reg.html")
getwd()
plot(a)
a<-lm(casen$ytrabajocor~casen$esc)
plot(a)
